# Copyright (c) 2020 Gitpod GmbH. All rights reserved.
# Licensed under the MIT License. See License-MIT.txt in the project root for license information.

{{ $comp := .Values.components.registryFacade -}}
{{- $this := dict "root" . "gp" $.Values "comp" $comp -}}
{{- if not $comp.disabled -}}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: registry-facade
  labels:
    app: {{ template "gitpod.fullname" . }}
    component: registry-facade
    kind: deployment
    stage: {{ .Values.installation.stage }}
    gitpod.io/nodeService: registry-facade
spec:
  selector:
    matchLabels:
      app: {{ template "gitpod.fullname" . }}
      component: registry-facade
      kind: pod
      stage: {{ .Values.installation.stage }}
      gitpod.io/nodeService: registry-facade
  template:
    metadata:
      name: registry-facade
      labels:
        app: {{ template "gitpod.fullname" . }}
        component: registry-facade
        kind: pod
        stage: {{ .Values.installation.stage }}
        gitpod.io/nodeService: registry-facade
    spec:
{{ include "gitpod.workspaceAffinity" $this | indent 6 }}
      serviceAccountName: registry-facade
      enableServiceLinks: false
      initContainers:
{{ include "gitpod.ca-certificates.container" $this | indent 8 }}
        # Add gitpod self-signed CA certificate to containerd
        # in order to pull images from the host without x509 errors
        - name: update-containerd-certificates
          command: ["nsenter"]
          args: ["--mount=/proc/1/ns/mnt", "--", "sh", "-c", "$(SETUP_SCRIPT)"]
          image: alpine:3.14
          env:
          - name: GITPOD_CA_CERT
            valueFrom:
              secretKeyRef:
                name: builtin-registry-certs
                key: ca.crt
          - name: SETUP_SCRIPT
            valueFrom:
              configMapKeyRef:
                name: update-ca-certificates
                key: setup.sh
          securityContext:
            privileged: true
      containers:
      - name: registry-facade
        image: {{ template "gitpod.comp.imageFull" $this }}
        args: ["run", "-v", "/mnt/config/config.json"]
{{ include "gitpod.container.imagePullPolicy" $this | indent 8 }}
{{ include "gitpod.container.resources" $this | indent 8 }}
        ports:
        - name: registry
          containerPort: {{ $comp.ports.registry.containerPort }}
          hostPort: {{ $comp.ports.registry.servicePort }}
        securityContext:
          privileged: false
          runAsUser: 1000
{{ include "gitpod.container.defaultEnv" $this | indent 8 }}
{{ include "gitpod.container.tracingEnv" $this | indent 8 }}
        - name: GRPC_GO_RETRY
          value: "on"
        volumeMounts:
{{ include "gitpod.ca-certificates.volumeMount" $this | indent 8 }}
        - name: cache
          mountPath: "/mnt/cache"
        - name: config
          mountPath: "/mnt/config"
          readOnly: true
        - mountPath: /ws-manager-client-tls-certs
          name: ws-manager-client-tls-certs
          readOnly: true
        {{- if .Values.components.workspace.pullSecret.secretName }}
        - name: pull-secret
          mountPath: /mnt/pull-secret.json
          subPath: .dockerconfigjson
        {{- end }}
        {{- if (or $comp.certificatesSecret.secretName .Values.certificatesSecret.secretName) }}
        - name: https-certificates
          mountPath: "/mnt/certificates"
        {{- end }}
{{ include "gitpod.kube-rbac-proxy" $this | indent 6 }}
      volumes:
      - name: cache
        emptyDir: {}
      - name: config
        configMap:
          name: {{ template "gitpod.comp.configMap" $this }}
      - name: ws-manager-client-tls-certs
        secret:
          secretName: {{ .Values.components.wsManager.tls.client.secretName }}
      {{- if .Values.components.workspace.pullSecret.secretName }}
      - name: pull-secret
        secret:
          secretName: {{ .Values.components.workspace.pullSecret.secretName }}
      {{- end }}
      {{- if .Values.certificatesSecret.secretName }}
      - name: https-certificates
        secret:
          secretName: {{ .Values.certificatesSecret.secretName }}
      {{- end }}
{{- include "gitpod.ca-certificates.volume" $this | indent 6 }}
{{ toYaml .Values.defaults | indent 6 }}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: update-containerd-certificates
data:
  setup.sh: |
    mkdir -p /etc/containerd/certs.d/reg.{{ .Values.hostname }} && echo "$GITPOD_CA_CERT" > /etc/containerd/certs.d/{{- (printf "reg.%s:%v" (.Values.components.registryFacade.hostname | default .Values.hostname) .Values.components.registryFacade.ports.registry.servicePort) -}}/ca.crt

{{ end }}

